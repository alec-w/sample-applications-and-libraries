services:
    app:
        build:
            context: ../../..
            dockerfile: applications/rest-api/Dockerfile
        depends_on:
            postgres:
                condition: service_healthy
            db_setup:
                condition: service_completed_successfully
    tests:
        image: golang:1.24.3-alpine3.21
        volumes:
            - ..:/working_dir
        working_dir: /working_dir
        command:
            - go
            - test
            - ./functional-tests/...
        environment:
            REST_API_HOST: app
        depends_on:
            app:
                condition: service_started
    db_setup:
        image: postgres:17.5
        environment:
            POSTGRES_PASSWORD: postgres
            PGPASSWORD: postgres
        volumes:
            - ..:/working_dir
        working_dir: /working_dir
        entrypoint: psql
        command:
            - -h
            - postgres
            - -U
            - postgres
            - -d
            - postgres
            - -f
            - internal/database/migrations/up.sql
        depends_on:
            postgres:
                condition: service_healthy
    postgres:
        image: postgres:17.5
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
        environment:
            POSTGRES_PASSWORD: postgres
